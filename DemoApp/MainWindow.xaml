<Window x:Class="DemoApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:custom="clr-namespace:DemoAppUI.Controls;assembly=DemoAppUI"
        xmlns:local="clr-namespace:DemoApp"
        mc:Ignorable="d"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None"
        Style="{StaticResource WindowStyle}"
        Title="DemoApp" Height="450" Width="800">

    <Window.InputBindings>
        <KeyBinding Modifiers="Alt" Key="F4" Command="{Binding ExitCommand}" />
        <KeyBinding Modifiers="Alt" Key="Enter" Command="{Binding FullScreenCommand}" />
    </Window.InputBindings>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="PreviewTouchDown">
            <i:InvokeCommandAction Command="{Binding MouseDownCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewTouchUp">
            <i:InvokeCommandAction Command="{Binding MouseUpCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseDown">
            <i:InvokeCommandAction Command="{Binding MouseDownCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseUp">
            <i:InvokeCommandAction Command="{Binding MouseUpCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding RegisterUserActivityCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding RegisterUserActivityCommand}" />
        </i:EventTrigger>


        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding ClosedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border BorderThickness="0"
                Grid.RowSpan="2"
                CornerRadius="{Binding CornerRadius}"
                 Background="{DynamicResource WindowBackGround}" >
            <!--Double click to maximize/normalize-->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <i:InvokeCommandAction Command="{Binding BorderMouseDownCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding BorderMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--Double click to maximize/normalize end-->


            <Grid>

                <!--resize grid-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="5"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="5"/>
                    </Grid.ColumnDefinitions>

                    <!-- Resize borders -->
                    <Border x:Name="TopLeft" Grid.Row="1" Grid.Column="1" Cursor="{Binding CursorNWSE}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="Top" Grid.Row="0" Grid.Column="2" Cursor="{Binding CursorNS}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="TopRight" Grid.Row="1" Grid.Column="3" Cursor="{Binding CursorNESW}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="Left" Grid.Row="2" Grid.Column="0" Cursor="{Binding CursorWE}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border Grid.Row="2" Grid.Column="1" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="Right" Grid.Row="2" Grid.Column="4" Cursor="{Binding CursorWE}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border Grid.Row="2" Grid.Column="3" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="BottomLeft" Grid.Row="3" Grid.Column="1" Cursor="{Binding CursorNESW}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="Bottom" Grid.Row="4" Grid.Column="2" Cursor="{Binding CursorNS}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border Grid.Row="3" Grid.Column="2"  Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <Border x:Name="BottomRight" Grid.Row="3" Grid.Column="3" Cursor="{Binding CursorNWSE}" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ResizeCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </Grid>
                <!--resize grid end-->

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Window Controls-->
                    <Grid Grid.Row="0">
                       
                        <!--Main menu-->
                        <Menu Margin="10 10 0 0"
                          Background="{DynamicResource WindowBackGround}" 
                          BorderThickness="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top">
                            <MenuItem Header="File" BorderThickness="0">
                                <MenuItem Header="New.." BorderThickness="0" Icon="{x:Null}">
                                </MenuItem>
                                <MenuItem Header="Save"  BorderThickness="0" Icon="{x:Null}"/>
                                <MenuItem Header="Load"  BorderThickness="0" Icon="{x:Null}"/>
                                <MenuItem Header="Exit"  BorderThickness="0" Icon="{x:Null}"/>
                            </MenuItem>
                            <MenuItem Header="Edit"/>
                            <MenuItem Header="View"/>
                            <MenuItem Header="Help"/>
                        </Menu>
                        <!--Main menu end-->

                        <!--Window controls-->
                        <Grid Margin="0 10 10 0"
                        VerticalAlignment="Top"
                          HorizontalAlignment="Right">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0"
                            Command="{Binding MinimizeCommand}"
                            Style="{DynamicResource InvisibleButton}"
                            Template="{DynamicResource NoMouseOverButtonTemplate}"
                            IsHitTestVisible="True"
                            Margin="5, 0">
                                <Icon:PackIconMaterial
                                           Foreground="{DynamicResource MainwindowIconColor}" 
                                           Kind="Minus"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Right"/>
                            </Button>

                            <Button Grid.Column="1"
                            Command="{Binding MaximizeCommand}"
                            Style="{DynamicResource InvisibleButton}"
                            Template="{DynamicResource NoMouseOverButtonTemplate}"
                            IsHitTestVisible="True"
                             Margin="5, 0">

                                <Grid>

                                    <Icon:PackIconMaterial Foreground="{DynamicResource MainwindowIconColor}"
                                                   Kind="SquareOutline"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Right"
                                                   Visibility="{Binding Maximized, Converter={StaticResource BoolCollapsedVisibleConverter}}"/>
                                    <Icon:PackIconBoxIcons Foreground="{DynamicResource MainwindowIconColor}"
                                                   Kind="RegularCopy"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Right"
                                                   Visibility="{Binding Maximized, Converter={StaticResource BoolVisibleCollapsedConverter}}"/>
                                </Grid>
                            </Button>

                            <Button Grid.Column="2"
                            Command="{Binding CloseCommand}"
                            Style="{DynamicResource InvisibleButton}"
                            Template="{DynamicResource NoMouseOverButtonTemplate}"
                            IsHitTestVisible="True"
                            Margin="5, 0">

                                <Icon:PackIconMaterial Foreground="{DynamicResource MainwindowIconColor}"
                                               Kind="Close"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Right"/>
                            </Button>
                        </Grid>
                        <!--Window controls end-->

                    </Grid>
                    <!--Window Controls end-->

                    <!--Content-->
                    <Grid Grid.Row="1"
                          Margin="10 0 10 10">
                        <!--needs this to block some of the clicks going to first border-->
                        <Border BorderThickness="1"  Background="{DynamicResource WindowBackGround}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>

                        <!--<ContentControl Content="{Binding CurrentView}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ContentControl>-->

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Border Margin="0 10 0 0"
                                    Grid.Row="0"
                                    Padding="20"
                                    CornerRadius="25 25 25 0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#1976ff" Offset="0"/>
                                        <GradientStop Color="#1976d2" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <CheckBox x:Name="cbToggleMenu" Grid.Column="0" IsChecked="True">
                                        <CheckBox.Template>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Grid Background="Transparent">
                                                    <Viewbox Width="25" Height="25">
                                                        <Path
                                     Data="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                     Fill="White"
                                     Stretch="Fill" />
                                                    </Viewbox>
                                                </Grid>
                                            </ControlTemplate>
                                        </CheckBox.Template>
                                    </CheckBox>

                                    <TextBlock Grid.Column="1"
                                               Margin="20 0 0 0"
                                               FontSize="18"
                                               Foreground="White"
                                               Text="Demo Application" />
                                </Grid>
                            </Border>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <custom:NavigationPanel Grid.Column="0"                                                        
                                                        BorderBrush="#dbdbdb"
                                                        BorderThickness="0 0 1 0"
                                                        FallbackOpenWidth="165"
                                                        IsOpen="{Binding IsChecked, ElementName=cbToggleMenu}"
                                                        OpenCloseDuration="0:0:0.25">
                                    <custom:NavigationPanel.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#f2f2f2" Offset="0"/>
                                            <GradientStop Color="#e2e2e2" Offset="1"/>
                                        </LinearGradientBrush>
                                    </custom:NavigationPanel.Background>

                                    <custom:NavigationPanel.Resources>
                                        <Style TargetType="custom:NavigationPanelItem">
                                            <Setter Property="Padding" Value="20 10" />
                                            <Setter Property="FontSize" Value="16" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="#444" />
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                            To="#dbdbdb"
                                                                            Duration="0:0:0.1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                                            To="Transparent"
                                                                            Duration="0:0:0.1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="#1669bb" />
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Foreground" Value="#1669bb" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </custom:NavigationPanel.Resources>
                                    <custom:NavigationPanel.Content>
                                        <StackPanel Margin="0 10">
                                            <custom:NavigationPanelItem Command="{Binding NavigationCommand}" CommandParameter="0">
                                                <TextBlock Text="Introduction"/>
                                            </custom:NavigationPanelItem>
                                            <custom:NavigationPanelItem Command="{Binding NavigationCommand}" CommandParameter="1">
                                                <TextBlock Text="Charts" />
                                            </custom:NavigationPanelItem>
                                            <custom:NavigationPanelItem>
                                                <TextBlock Text="Developer Guides" />
                                            </custom:NavigationPanelItem>
                                            <custom:NavigationPanelItem>
                                                <TextBlock Text="Tutorials" />
                                            </custom:NavigationPanelItem>
                                            <custom:NavigationPanelItem>
                                                <TextBlock Text="Reference" />
                                            </custom:NavigationPanelItem>
                                        </StackPanel>
                                    </custom:NavigationPanel.Content>
                                </custom:NavigationPanel>
                                
                                <ContentControl Grid.Column="1"
                                                Content="{Binding CurrentView}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding HandleMouseCommand}" PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ContentControl>
                                
                            </Grid>
                        </Grid>

                    </Grid>
                    <!--Content End-->
                    
                </Grid>

            </Grid>
        </Border>
     

    </Grid>
    
    
    
    
    
    
    
    

    
    
</Window>
